{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 Edemu JS\\\\\\u0422\\u0435\\u043C\\u044B\\\\Marvel\\\\marvel_starter\\\\src\\\\components\\\\randomChar\\\\RandomChar.js\";\nimport { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RandomChar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      char: {},\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n    this.onCharLoaded = char => {\n      console.log('Update');\n      this.setState({\n        char,\n        loading: false\n      });\n    };\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n    this.updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      this.marvelService.getCharacter(id).then(this.onCharLoaded).catch(this.onError);\n      // .catch(error => console.error(error))\n    };\n    this.updateChar();\n    // setInterval(this.updateChar, 3000);\n    console.log('constructor');\n  }\n  componentDidMount() {\n    this.updateChar();\n    setInterval(this.updateChar);\n    console.log('mount');\n  }\n  componentWillUnmount() {\n    console.log('unmount');\n  }\n  render() {\n    console.log('render');\n    const {\n      char,\n      loading,\n      error\n    } = this.state;\n    const ErrorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? /*#__PURE__*/_jsxDEV(View, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 47\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar\",\n      children: [ErrorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__static\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 52\n          }, this), \"Do you want to get to know him better?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: \"Or choose another one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button__main\",\n          onClick: this.updateChar,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"try it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mjolnir,\n          alt: \"mjolnir\",\n          className: \"randomchar__decoration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki\n  } = char;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: \"Random character\",\n      className: \"randomchar__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_c = View;\nexport default RandomChar;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["Component","Spinner","ErrorMessage","MarvelService","mjolnir","jsxDEV","_jsxDEV","RandomChar","constructor","props","state","char","loading","error","marvelService","onCharLoaded","console","log","setState","onError","updateChar","id","Math","floor","random","getCharacter","then","catch","componentDidMount","setInterval","componentWillUnmount","render","fileName","_jsxFileName","lineNumber","columnNumber","spinner","content","View","className","children","onClick","src","alt","_ref","name","description","thumbnail","homepage","wiki","href","_c","$RefreshReg$"],"sources":["C:/Work/Практика/Обучение Edemu JS/Темы/Marvel/marvel_starter/src/components/randomChar/RandomChar.js"],"sourcesContent":["import { Component } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nclass RandomChar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateChar();\r\n        // setInterval(this.updateChar, 3000);\r\n        console.log('constructor');\r\n    }\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n        setInterval(this.updateChar)\r\n        console.log('mount');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('unmount');\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        console.log('Update');\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        this.marvelService\r\n        .getCharacter(id)\r\n        .then(this.onCharLoaded)\r\n        .catch(this.onError);\r\n        // .catch(error => console.error(error))\r\n    }\r\n\r\n    render () {\r\n        console.log('render');\r\n        const {char, loading, error} = this.state;\r\n        const ErrorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? <View char={char}/> : null;\r\n        return (\r\n            <div className=\"randomchar\">\r\n              {ErrorMessage}\r\n              {spinner}\r\n              {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br/>\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button className=\"button button__main\" onClick={this.updateChar}>\r\n                        <div className=\"inner\">try it</div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst View = ({char}) => {\r\nconst {name, description, thumbnail, homepage, wiki} = char;\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}