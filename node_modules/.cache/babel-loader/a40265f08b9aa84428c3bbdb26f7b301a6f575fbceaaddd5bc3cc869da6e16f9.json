{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 Edemu JS\\\\\\u0422\\u0435\\u043C\\u044B\\\\Marvel\\\\marvel_starter\\\\src\\\\components\\\\charInfo\\\\CharInfo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CharInfo = props => {\n  _s();\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacter,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n  const updateChar = () => {\n    const {\n      charId\n    } = props;\n    if (!charId) {\n      return;\n    }\n    clearError();\n    getCharacter(charId).then(onCharLoaded);\n  };\n  const onCharLoaded = char => {\n    setChar(char);\n  };\n  const skeleton = !char && !loading && !error ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 50\n  }, this) : null;\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 32\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 29\n  }, this) : null;\n  const content = char && !loading && !error ? /*#__PURE__*/_jsxDEV(View, {\n    char: char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 48\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\",\n    children: [skeleton, errorMessage, spinner, content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CharInfo, \"k0Mv4KovtMtUa7FEvjzVPkSHy8U=\", false, function () {\n  return [useMarvelService];\n});\n_c = CharInfo;\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki,\n    comics\n  } = char;\n  let imgStyle = {\n    objectFit: 'cover'\n  };\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {\n      objectFit: 'contain'\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name,\n        style: imgStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: comics.length > 0 ? comics.slice(0, 10).map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__comics-item\",\n        children: item.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"There are no comics with this character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = View;\nCharInfo.propTypes = {\n  charId: PropTypes.number\n};\nexport default CharInfo;\nvar _c, _c2;\n$RefreshReg$(_c, \"CharInfo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"names":["useState","useEffect","PropTypes","useMarvelService","Spinner","ErrorMessage","Skeleton","jsxDEV","_jsxDEV","Fragment","_Fragment","CharInfo","props","_s","char","setChar","loading","error","getCharacter","clearError","updateChar","charId","then","onCharLoaded","skeleton","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","spinner","content","View","className","children","_c","_ref","name","description","thumbnail","homepage","wiki","comics","imgStyle","objectFit","src","alt","style","href","length","slice","map","item","i","_c2","propTypes","number","$RefreshReg$"],"sources":["C:/Work/Практика/Обучение Edemu JS/Темы/Marvel/marvel_starter/src/components/charInfo/CharInfo.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n  const [char, setChar] = useState(null);\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n  }, [props.charId]);\r\n\r\n  const updateChar = () => {\r\n    const { charId } = props;\r\n    if (!charId) {\r\n      return;\r\n    }\r\n\r\n    clearError();\r\n    getCharacter(charId).then(onCharLoaded);\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const skeleton = !char && !loading && !error ? <Skeleton /> : null;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = char && !loading && !error ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"char__info\">\r\n      {skeleton}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\r\n  let imgStyle = { objectFit: 'cover' };\r\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n    imgStyle = { objectFit: 'contain' };\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={imgStyle} />\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        {comics.length > 0 ? (\r\n          comics.slice(0, 10).map((item, i) => (\r\n            <li key={i} className=\"char__comics-item\">\r\n              {item.name}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>There are no comics with this character</li>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM;IAAEgB,OAAO;IAAEC,KAAK;IAAEC,YAAY;IAAEC;EAAW,CAAC,GAAGhB,gBAAgB,CAAC,CAAC;EAEvEF,SAAS,CAAC,MAAM;IACdmB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACR,KAAK,CAACS,MAAM,CAAC,CAAC;EAElB,MAAMD,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAM;MAAEC;IAAO,CAAC,GAAGT,KAAK;IACxB,IAAI,CAACS,MAAM,EAAE;MACX;IACF;IAEAF,UAAU,CAAC,CAAC;IACZD,YAAY,CAACG,MAAM,CAAC,CAACC,IAAI,CAACC,YAAY,CAAC;EACzC,CAAC;EAED,MAAMA,YAAY,GAAIT,IAAI,IAAK;IAC7BC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,MAAMU,QAAQ,GAAG,CAACV,IAAI,IAAI,CAACE,OAAO,IAAI,CAACC,KAAK,gBAAGT,OAAA,CAACF,QAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAAG,IAAI;EAClE,MAAMC,YAAY,GAAGZ,KAAK,gBAAGT,OAAA,CAACH,YAAY;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAAG,IAAI;EACpD,MAAME,OAAO,GAAGd,OAAO,gBAAGR,OAAA,CAACJ,OAAO;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAAG,IAAI;EAC5C,MAAMG,OAAO,GAAGjB,IAAI,IAAI,CAACE,OAAO,IAAI,CAACC,KAAK,gBAAGT,OAAA,CAACwB,IAAI;IAAClB,IAAI,EAAEA;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAAG,IAAI;EAExE,oBACEpB,OAAA;IAAKyB,SAAS,EAAC,YAAY;IAAAC,QAAA,GACxBV,QAAQ,EACRK,YAAY,EACZC,OAAO,EACPC,OAAO;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCIF,QAAQ;EAAA,QAEyCR,gBAAgB;AAAA;AAAAgC,EAAA,GAFjExB,QAAQ;AAqCd,MAAMqB,IAAI,GAAGI,IAAA,IAAc;EAAA,IAAb;IAAEtB;EAAK,CAAC,GAAAsB,IAAA;EACpB,MAAM;IAAEC,IAAI;IAAEC,WAAW;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAG5B,IAAI;EAErE,IAAI6B,QAAQ,GAAG;IAAEC,SAAS,EAAE;EAAQ,CAAC;EACrC,IAAIL,SAAS,KAAK,qEAAqE,EAAE;IACvFI,QAAQ,GAAG;MAAEC,SAAS,EAAE;IAAU,CAAC;EACrC;EAEA,oBACEpC,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA;MAAKyB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B1B,OAAA;QAAKqC,GAAG,EAAEN,SAAU;QAACO,GAAG,EAAET,IAAK;QAACU,KAAK,EAAEJ;MAAS;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDpB,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAKyB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEG;QAAI;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7CpB,OAAA;UAAKyB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB1B,OAAA;YAAGwC,IAAI,EAAER,QAAS;YAACP,SAAS,EAAC,qBAAqB;YAAAC,QAAA,eAChD1B,OAAA;cAAKyB,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAQ;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACJpB,OAAA;YAAGwC,IAAI,EAAEP,IAAK;YAACR,SAAS,EAAC,0BAA0B;YAAAC,QAAA,eACjD1B,OAAA;cAAKyB,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNpB,OAAA;MAAKyB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEI;IAAW;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChDpB,OAAA;MAAKyB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAO;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3CpB,OAAA;MAAIyB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC9BQ,MAAM,CAACO,MAAM,GAAG,CAAC,GAChBP,MAAM,CAACQ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC9B7C,OAAA;QAAYyB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EACtCkB,IAAI,CAACf;MAAI,GADHgB,CAAC;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACL,CAAC,gBAEFpB,OAAA;QAAA0B,QAAA,EAAI;MAAuC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAChD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACL,CAAC;AAEP,CAAC;AAAC0B,GAAA,GAvCItB,IAAI;AAyCVrB,QAAQ,CAAC4C,SAAS,GAAG;EACnBlC,MAAM,EAAEnB,SAAS,CAACsD;AACpB,CAAC;AAED,eAAe7C,QAAQ;AAAC,IAAAwB,EAAA,EAAAmB,GAAA;AAAAG,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAH,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}