{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 Edemu JS\\\\\\u0422\\u0435\\u043C\\u044B\\\\Marvel\\\\marvel_starter\\\\src\\\\components\\\\charList\\\\CharList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharList = props => {\n  _s();\n  const [charList, setCharList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [newItemLoading, setItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const marvelService = new MarvelService();\n  useEffect(() => {\n    onRequest();\n  }, []);\n  const onRequest = offset => {\n    onCharListLoading();\n    marvelService.getAllCharacters(offset).then(onCharListLoaded).catch(onError);\n  };\n  const onCharListLoading = () => {\n    setNewItemLoading(true);\n  };\n  const onCharListLoaded = newCharList => {\n    let ended = false;\n    if (newCharList.lenght < 9) {\n      ended = true;\n    }\n    setCharList(charList => [...charList, ...newCharList]);\n    setLoading(false);\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 9);\n    setCharEnded(charEnded => ended);\n  };\n  const onError = () => {\n    setError(true);\n    setLoading(false);\n  };\n  const itemRefs = useRef([]);\n  const focusOnItem = id => {\n    // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n    // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n    // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n    // в отдельный компонент. Но кода будет больше, появится новое состояние\n    // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n    // По возможности, не злоупотребляйте рефами, только в крайних случаях\n    itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n    itemRefs.current[id].classList.add('char__item_selected');\n    itemRefs.current[id].focus();\n  };\n\n  // Этот метод создан для оптимизации, \n  // чтобы не помещать такую конструкцию в метод render\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        tabIndex: 0,\n        ref: el => itemRefs.current[i] = el,\n        onClick: () => {\n          props.onCharSelected(item.id);\n          focusOnItem(i);\n        },\n        onKeyPress: e => {\n          if (e.key === ' ' || e.key === \"Enter\") {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    });\n    // А эта конструкция вынесена для центровки спиннера/ошибки\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n  const items = renderItems(charList);\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 38\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 35\n  }, this) : null;\n  const content = !(loading || error) ? items : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      disabled: newItemLoading,\n      style: {\n        'display': charEnded ? 'none' : 'block'\n      },\n      onClick: () => onRequest(offset),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 13\n  }, this);\n};\n_s(CharList, \"hU4At1DL7O6GH7JPjiaaB3O/3o0=\");\n_c = CharList;\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n};\nexport default CharList;\nvar _c;\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"names":["useState","useEffect","useRef","PropTypes","Spinner","ErrorMessage","MarvelService","jsxDEV","_jsxDEV","CharList","props","_s","charList","setCharList","loading","setLoading","error","setError","newItemLoading","setItemLoading","offset","setOffset","charEnded","setCharEnded","marvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","setNewItemLoading","newCharList","ended","lenght","itemRefs","focusOnItem","id","current","forEach","item","classList","remove","add","focus","renderItems","arr","items","map","i","imgStyle","thumbnail","className","tabIndex","ref","el","onClick","onCharSelected","onKeyPress","e","key","children","src","alt","name","style","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","spinner","content","disabled","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Work/Практика/Обучение Edemu JS/Темы/Marvel/marvel_starter/src/components/charList/CharList.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [newItemLoading, setItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n    const marvelService = new MarvelService();\r\n\r\n\r\n    useEffect(() => {\r\n        onRequest();\r\n    }, [])\r\n\r\n\r\n    const onRequest = (offset) => {\r\n        onCharListLoading();\r\n        marvelService.getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n            .catch(onError)\r\n    }\r\n\r\n   const onCharListLoading = () => {\r\nsetNewItemLoading(true);\r\n}\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.lenght < 9) {\r\n            ended = true;\r\n        }\r\n        \r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setLoading(false);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(charEnded => ended);\r\n    }\r\n\r\n    const onError = () => {\r\n        setError(true);\r\n        setLoading(false);\r\n    }\r\n\r\n     const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\r\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\r\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\r\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\r\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\r\n\r\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n\r\n    // Этот метод создан для оптимизации, \r\n    // чтобы не помещать такую конструкцию в метод render\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            \r\n            return (\r\n                <li\r\n                    className=\"char__item\"\r\n                    tabIndex={0}\r\n                    ref={el => itemRefs.current[i] = el}\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                        props.onCharSelected(item.id);\r\n                        focusOnItem(i);\r\n                    }}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === ' ' || e.key === \"Enter\") {\r\n                            props.onCharSelected(item.id);\r\n                            focusOnItem(i);\r\n                        }\r\n                    }}>\r\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                        <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n        // А эта конструкция вынесена для центровки спиннера/ошибки\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n\r\n        \r\n        const items = renderItems(charList);\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? items : null;\r\n\r\n        return (\r\n            <div className=\"char__list\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <button \r\n                    className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    style={{'display': charEnded ? 'none' : 'block'}}\r\n                    onClick={() => onRequest(offset)}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}